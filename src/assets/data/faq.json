[
    {
       "title": "What is Atos Cloud Foundry?",
       "desc": "Atos Cloud Foundry is an integrated cloud platform that accelerates your time-to-market for next generation digital applications or the platform to pitch for developers that they could code in the programming language and Web framework of their choice without worrying about the underlying IT environment.<br />It enables you to:<br /><ul><li>Create cloud native applications using a range of programming languages framework and application services.</li><li>Deploy applications to your choice of supported IaaS target such as private or public clouds around the globe based geographical location to meet your data sovereignty or network latency needs and avoid vendor lock-in.</li><li>Deliver updates to your cloud applications continuously without downtime</li><li>Have multiple versions of your live application at the same time</li><li>Dynamically scale your applications without changing any code</li></ul>"
    },    
    {
       "title": "How can I get started with Atos Cloud Foundry and onboarding of users?",
       "desc": "For your own dedicated instance of Cloud Foundry, contact Christophe Bon (<a href='mailto:christophe.bon@atos.net'>christophe.bon@atos.net</a>).<br /><br />For on-boarding of new-users on Atos cloud Foundry platform. Users need to send their request with the attachment of on-boarding form in <a href='mailto:gcsi-coe-ops-pltmgt@atos.net'>gcsi-coe-ops-pltmgt@atos.net</a> mailbox.<br /><br />Please find the link of on-boarding form :- <a href='https://acf-console.s3.amazonaws.com/ACF+UserAccount-vOrgs_ChangeRequest.xlsx'>https://acf-console.s3.amazonaws.com/ACF+UserAccount-vOrgs_ChangeRequest.xlsx</a>"
    },
    {
       "title": "How many programming languages for application development are supported in Atos Cloud Foundry?",
       "desc": "Cloud Foundry supports several popular programming languages and their frameworks as follows:<ul><li>Ruby</li><li>PHP (incl. Wordpress)</li><li>Node JS</li><li>Java</li><li>Clojure</li><li>Go Lang</li><li>Python</li><li>Scala</li><li>Apple Swift</li><li>Microsoft .Net</li><li>TOMEE</li><li>Jboss</li><li>Wildfly</li></ul>"
    },
    {
       "title": "Application Services available or supported within Atos Cloud Foundry?",
       "desc": "<p class='x_MsoListParagraph'><span lang='EN-US'><b>Application</b> <b>Services Supported in HA mode</b></span></p><ul><li class='x_MsoListParagraph'><span lang='EN-US'>CF Kafka</span></li><li>CF ELK</li><li>Broker Aurora</li><li>CF Elasticsearch</li></ul><b>Application</b> <b>Services available for end users to explore (NON-HA by default)</b><ul><li>CF MySQL/MariaDB + UI</li><li>CF RabbitMQ</li><li>CF Redis</li><li>CF MongoDB + UI</li><li>CF PostgreSQL + UI</li><li>CFMemcached</li><li>CF ElasticSearch (beta version)</li><li>CF Neo4J</li><li>CF RiakCS</li><li>CF Cassandra</li><li>CF CouchDB + UI</li><li>Abacus</li></ul>"
    },
    {
       "title": "What are 12 factor applications?",
       "desc": "The twelve-factor app is a methodology for building software-as-a-service apps that meets following requirements:<ul><li>Use declarative formats for setup automation, to minimize time and cost for new developers joining the project</li><li>Have a clean contract with the underlying operating system, offering maximum portability between execution environments</li><li>Are suitable for deployment on modern cloud platforms, obviating the need for servers and systems administration</li><li>Minimize divergence between development and production, enabling continuous deployment for maximum agility</li><li>And can scale up without significant changes to tooling, architecture, or development practices.</li></ul>The twelve-factor methodology can be applied to apps written in any programming language, and which use any combination of backing services (database, queue, memory cache, etc). For further reference visit: <a href='https://12factor.net' target='_blank'>12factor.net</a>"
    },
    {
       "title": "What is micro service architecture?",
       "desc": "Micro services is a software architecture style in which complex applications are composed of small, independent processes communicating with each other using language-agnostic APIs. These services are small, highly decoupled and focus on doing a small task, facilitating a modular approach to system-building."
    },
    {
       "title": "How Docker, Kubernetes & Cloud Foundry",
       "desc": "<ul><li><strong>Docker & Cloud Foundry</strong><br />Deploying an App with Docker <a href='https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdocs.cloudfoundry.org%2Fdevguide%2Fdeploy-apps%2Fpush-docker.html&amp;data=02%7C01%7Cprashanth.janardanan%40atos.net%7C95d370b20f6a43e2478308d6dd1bfa0b%7C33440fc6b7c7412cbb730e70b0198d5a%7C0%7C0%7C636939509555206710&amp;sdata=uS4t1jNDTksr0mfE70bdxVdtRnYbAH8VIunLZglgVfc%3D&amp;reserved=0' target='_blank'>https://docs.cloudfoundry.org/devguide/deploy-apps/push-docker.html</a><br />Using Docker in Cloud Foundry <a href='https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdocs.cloudfoundry.org%2Fadminguide%2Fdocker.html&amp;data=02%7C01%7Cprashanth.janardanan%40atos.net%7C95d370b20f6a43e2478308d6dd1bfa0b%7C33440fc6b7c7412cbb730e70b0198d5a%7C0%7C0%7C636939509555216698&amp;sdata=gDEs%2BXZYi9yBDc6Rfd%2BkjMiEKGqiveuDNIQFkcgahd8%3D&amp;reserved=0' target='_blank'>https://docs.cloudfoundry.org/adminguide/docker.html</a></li><li><strong>Kubernetes &amp; Cloud Foundry</strong><br /><a href='https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.cloudfoundry.org%2Fcontainer-runtime%2F&amp;data=02%7C01%7Cprashanth.janardanan%40atos.net%7C95d370b20f6a43e2478308d6dd1bfa0b%7C33440fc6b7c7412cbb730e70b0198d5a%7C0%7C0%7C636939509555216698&amp;sdata=2HmGc8Z8A3TiaKbFVnF45tX%2BoYk7wNgXIJtFOn3Wlo4%3D&amp;reserved=0' target='_blank'>https://www.cloudfoundry.org/container-runtime</a>&nbsp;Atos Cloud foundry is a platform as a service (PaaS) which makes it really easy for developers to run their applications in the cloud without having to worry about any infrastructure. To push applications to the cloud, developers only push their (web) applications; everything else – from the hardware up to the application servers – is provided by the platform. In addition to hosting applications, Atos Cloud Foundry also provide services like databases, caches and messaging systems that developers can leverage, again without having to set up any infrastructure. Furthermore, Atos Cloud Foundry provides scalability of applications and auto-recovery; it provides logging dashboards and more administration functionality many developers don’t want to worry about. Docker is a container technology to package full application stacks so that these containers can easily be run in different environments. This portability is achieved by packaging not only the core applications (your own code), but also the complete underlying stack you need to run applications including application servers, Java run-time environment, configuration and other dependencies. Docker uses Linux as operating system and leverages concepts like Linux namespaces to run multiple applications in sandboxes. Containers are more portable since all you need are Linux Docker environments while for Atos Cloud Foundry packaged applications you have more prerequisites, the Atos Cloud Foundry run-times and services.</li></ul>"
    },
    {
       "title": "What is containerization?",
       "desc": "Containerization is a lightweight alternative to full machine virtualization that involves encapsulating an application in a container with its own operating environment. This provides many of the benefits of loading an application onto a virtual machine, as the application can be run on any suitable physical machine without any worries about dependencies. Docker is a technology for creating and running Linux containers. For example, A Docker container for java app will consist of a Docker image, which will basically contain a filesystem with all the things needed to run your app (JVM, your source code, etc.), and docker container metadata, which tells the Docker daemon how to run the app inside the image (e.g. what environment variables to set, what ports to expose, what commands to run, etc."
    },
    {
       "title": "How can I run my own Docker image on Atos Cloud Foundry?",
       "desc": "All atos cloud foundry instance are by-default Docker enabled. Users simply need to push app using following command /syntax:<blockquote>$ cf push   app-name  --docker -image  user/docker-image-name<br />Option:app-name:  name of your app, user/docker-image-name:  user account name/name of docker image created for app.</blockquote>Further information can be found from the following link: <a href='https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdocs.cloudfoundry.org%2Fdevguide%2Fdeploy-apps%2Fpush-docker.html&amp;data=02%7C01%7Cprashanth.janardanan%40atos.net%7C95d370b20f6a43e2478308d6dd1bfa0b%7C33440fc6b7c7412cbb730e70b0198d5a%7C0%7C0%7C636939509555216698&amp;sdata=ZTTNRv1kQNSUbdRKaWDUrycsvPF0c2mowynYy9v1V2o%3D&amp;reserved=0' target='_blank'>https://docs.cloudfoundry.org/devguide/deploy-apps/push-docker.html</a><br /><br /><strong>Note –</strong> The Cloud Controller always runs Docker containers on Diego with user namespaces enabled. This security restriction prevents certain features, such as the ability to mount FuseFS devices, from working in Docker containers. To mitigate security concerns, Atos Cloud Foundry recommends that you run only trusted Docker containers on the platform."
    },
    {
       "title": "What target IAAS are supported in Atos Cloud Foundry?",
       "desc": "Atos Cloud Foundry supports the following IaaS:<ul><li>Amazon Web Services (AWS)</li><li>Trusted Agile Infrastructure(TAI)</li><li>VMware vSphere – Enterprise Private Cloud(EPC)</li><li>Openstack – IBM Bluebox</li><li>Openshift</li><li>Microsoft Azure</li><li>Google (GCP)</li><li>Alibaba</li><li>Huawei</li></ul>"
    },
    {
       "title": "What are the port limitations of Atos Cloud Foundry?",
       "desc": "Applications running on Atos Cloud Foundry receive requests through the URLs configured for the application<ul><li>Atos Cloud Foundry applications receive HTTPS requests on ports 80 and 443 only.</li><li>The TCP/WebSocket communication happens through port 4443.</li></ul>"
    },
    {
       "title": "What is Diego?",
       "desc": "Diego is the core architecture of Atos Cloud Foundry to help scheduling, deploying and manage the application containers. Further information can be found from the following link:-<a href='https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdocs.cloudfoundry.org%2Fconcepts%2Fdiego%2Fdiego-architecture.html&amp;data=02%7C01%7Cprashanth.janardanan%40atos.net%7C95d370b20f6a43e2478308d6dd1bfa0b%7C33440fc6b7c7412cbb730e70b0198d5a%7C0%7C0%7C636939509555226697&amp;sdata=K2vn%2FSf69EJAsEsxrf0emIC0DI9LjG%2FItCaTwCkmryw%3D&amp;reserved=0' target='_blank'>https://docs.cloudfoundry.org/concepts/diego/diegoarchitecture.html</a>"
    },
    {
       "title": "What is Vertical vs Horizontal scale?",
       "desc": "Horizontal scalability is the ability to increase capacity by adding multiple hardware or software entities so that they work as a single logical unit. When servers are clustered, the original server is being scaled out horizontally.If a cluster requires more resources to improve performance and provide high availability (HA), an administrator can scale out by adding more servers to the cluster. An important advantage of horizontal scalability is that it can provide administrators with the ability to increase capacity on the fly. Another advantage is that in theory, horizontal scalability is only limited by how many entities can be connected successfully. The distributed storage system Cassandra, for example, runs on top of hundreds of commodity nodes spread across different data centers. Because the commodity hardware is scaled out horizontally, Cassandra is fault tolerant and does not have a single point of failure (SPoF). Vertical scalability, on the other hand, increases capacity by adding more resources, such as more memory or an additional CPU, to a machine. Scaling vertically, which is also called scaling up, usually requires downtime while new resources are being added and has limits that are defined by hardware. When Amazon RDS customers need to scale vertically, for example, they can switch from a smaller to a bigger machine, but Amazon''s largest RDS instance has only 68 GB of memory."
    },
    {
       "title": "How can I see my application logs?",
       "desc": "<blockquote>Using CF-CLI command as below<br />$ cf logs YOUR-APP-NAME Where [APP-NAME] is name of your application pushed with name</blockquote>"
    },
    {
       "title": "Does Atos Cloud Foundry support persistence store?",
       "desc": "Applications running on Atos Cloud Foundry should not write files to the local file system for the following reasons:Local file system storage is short-lived. When an application instance crashes or stops, the resources assigned to that instance are reclaimed by the platform including any local disk changes made since the app started. When the instance is restarted, the application will start with a new disk image. Although your application can write local files while it is running, the files will disappear after the application restarts. Instances of the same application do not share a local file system. Each application instance runs in its own isolated container. Thus a file written by one instance is not visible to other instances of the same application. If the files are temporary, this should not be a problem. However, if your application needs the data in the files to persist across application restarts, or the data needs to be shared across all running instances of the application, the local file system should not be used. We recommend using a shared data service like a database or blobstore for this purpose.For example, instead of using the local file system, you can use a Cloud Foundry service such as the MongoDB document database or a relational database like MySQL or Postgres. Another option is to use cloud storage providers such as Amazon S3, Google Cloud Storage, Dropbox, or Box. If your application needs to communicate across different instances of it, consider a cache like Redis or a messaging-based architecture with RabbitMQ."
    },
    {
       "title": "Does Atos Cloud Foundry support .Net applications?",
       "desc": "Atos Cloud Foundry being a Cloud Foundry Foundation certified distribution, it also provides .NET applications support. Further information can be found from the following link:-<a href='https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdocs.cloudfoundry.org%2Fbuildpacks%2Fdotnet-core%2Findex.html&amp;data=02%7C01%7Cprashanth.janardanan%40atos.net%7C95d370b20f6a43e2478308d6dd1bfa0b%7C33440fc6b7c7412cbb730e70b0198d5a%7C0%7C0%7C636939509555226697&amp;sdata=SrdYEHxsWwT1cfCWZ1OTHIXDWd1flTWrDG2pnLMgBOE%3D&amp;reserved=0' target='_blank'>https://docs.cloudfoundry.org/buildpacks/dotnet-core/index.html</a>"
    },
    {
       "title": "What is Bosh-lite?",
       "desc": "BOSH Lite is a pre-built Vagrant box which includes the Director. It uses containers to emulate VMs which makes it an excellent choice for:<ul><li>General BOSH exploration without investing time and resources to configure an IaaS</li><li>Development of releases (including BOSH itself)</li><li>Testing releases locally or in CI.</li></ul>"
    },
    {
       "title": "How can I SSH to VM on which my app is running?",
       "desc": "This can be done by Configuring SSH Access at the Application Level<br /><blockquote>cf enable-ssh enables SSH access to all instances of an app:<br />$ cf enable-ssh MY-AWESOME-APP<br />cf disable-ssh disables SSH access to all instances of an app:<br />$ cf disable-ssh MY-AWESOME-APP</blockquote>"
    },
    {
       "title": "What is default response time for application?",
       "desc": "The application response time varies based on language framework and the buildpack. The default time limits for the phases are as follows:<ul><li>Upload: 5 minutes maximum</li><li>Stage: 5 minutes maximum</li><li>Start: 2 seconds maximum</li></ul>"
    },
    {
       "title": "How can I leverage for other services on Atos Cloud Foundry?",
       "desc": "User-provided service instances enable developers to use services that not available in the marketplace with their applications running on Cloud Foundry. User-provided service instances can be used to deliver service credentials to an application, and/or to trigger streaming of application logs to a syslog compatible consumer. These two functions can be used alone or at the same time. Once created, user-provided service instances behave like service instances created through the marketplace. <ul><li>Create a User-Provided Service Instance<br />The alias for cf create-user-provided-service is cf cups</li><li>Deliver Service Credentials to an Application</li></ul>Suppose a developer obtains a URL, port, username, and password for communicating with an Oracle database managed outside of Atos Cloud Foundry. The developer could manually create custom environment variables to configure their application with these credentials (of course you would never hard code these credentials in your application!). User-provided service instances enable developers to configure their applications with these using the familiar Application Binding operation and the same application runtime environment variable used by Atos Cloud Foundry to automatically deliver credentials for marketplace services (VCAP_SERVICES).<blockquote>$ cf cups SERVICE_INSTANCE -p ''{'username':'admin','password':'pa55woRD'}''</blockquote>To create a service instance in interactive mode, use the -p option with a comma-separated list of parameter names. The CF CLI will prompt you for each parameter value. <blockquote>$ cf cups SERVICE_INSTANCE -p 'host, port, dbname, username, password'</blockquote>Stream Application Logs to a ServiceUser-provided service instances enable developers to stream applications logs to a syslog compatible aggregation or analytics service that isn’t available in the marketplace. Create the user-provided service instance, specifying the URL of the service with the -l option. <blockquote>$ cf cups SERVICE_INSTANCE -l syslog://example.log-aggregator.com</blockquote>"
    },
    {
       "title": "What is the price model for  Atos Cloud Foundry?",
       "desc": "Thanks to contact your referent Atos contractual SPOC for further details. Please send your request to Atos Global Devops <a href='https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Ffaq.apps.eu01.cf.canopy-cloud.com%2Ffaq%2Fgcsi-coe-ops-pltmgt%40atos.net&amp;data=02%7C01%7Cprashanth.janardanan%40atos.net%7C95d370b20f6a43e2478308d6dd1bfa0b%7C33440fc6b7c7412cbb730e70b0198d5a%7C0%7C0%7C636939509555206710&amp;sdata=C8IIwnY74bjcBS6xSyUQ35ViIL5fTBLxJxAXfYZBgCg%3D&amp;reserved=0'>( gcsi-coe-ops-pltmgt@atos.net) </a>with your details like E-mail ID,Organization and Country. An account will be made for you within 1-2 working days."
    },
    {
       "title": "What is support model for Atos Cloud Foundry?",
       "desc": "L1 support provided by Atos Global DevOps (24x7) and L2 support provided by Atos Cloud Foundry Team between 8:00 to 17:00 hours GMT."
    },
    {
       "title": "What is SLA?",
       "desc": "A service-level agreement (SLA) is a part of a standardized service contract where a service is formally defined. Particular aspects of the service – scope, quality, responsibilities – are agreed between the service provider and the service user. A common feature of an SLA is a contracted delivery time (of the service or performance). As an example, Internet service providers and telcos will commonly include service level agreements within the terms of their contracts with customers to define the level(s) of service being sold in plain language terms. In this case the SLA will typically have a technical definition in terms of mean time between failures (MTBF), mean time to repair or mean time to recovery (MTTR); identifying which party is responsible for reporting faults or paying fees; responsibility for various data rates; throughput; jitter; or similar measurable details."
    },
    {
       "title": "How can I use my own domain for app running in Atos Cloud Foundry?",
       "desc": "Routing custom top-level domains (e.g. my-custom-domain.com) and custom subdomains (e.g. blog.my-custom-domain.com) to an app running on a Atos Cloud Foundry instance can be achieved using CloudFlare as a DNS provider. <blockquote>CF CLI command: $ cf create-domain 'you-domain-name'</blockquote>"
    },
    {
       "title": "How can I assign extra size RAM/Disk to my app?",
       "desc": "On the app landing page, there are dropdown available to increase Memory and Disk size. <br />Using CF CLI <blockquote>$ cf scale myApp -i 5<br />$ cf scale myApp -k 512M<br />$ cf scale myApp -m 1G</blockquote>"
    },
    {
       "title": "How Atos Cloud Foundry support backup?",
       "desc": "There are no end user backup services supported with Atos Cloud Foundry as of now but we do support customer specific customization in single tenant environment. For example if customer requests backup of user base (UUDB / CC DB) or any specific service like MySQL database for instance. User specific destinations (e.g. S3 backup on EU region etc.) are supported."
    },
    {
       "title": "How can I setup channel between two apps running in Atos Cloud Foundry?",
       "desc": "Use a messaging service (like RabbitMQ) to communicate between instances of applications. You can also store shared information in a database service or any remote location outside the file system."
    },
    {
       "title": "How can I use external build pack in Atos Cloud Foundry?",
       "desc": "<blockquote>$ cf push –b external_buildpack_url or in your app manifest.yml section you can provide buildpack url</blockquote>"
    },
    {
       "title": "How can I move/clone apps within space/orgs?",
       "desc": "You cannot move an application in the UI. The best way to accomplish this is using the command line by essentially deploying the application to the other space. You can switch to the integration space and then deploy the same application. You can use blue green deployment to accomplish this."
    },
    {
       "title": "What authentication techniques are supported in Atos Cloud Foundry?",
       "desc": "User Account and Authentication (UAA) is the central identity management service for the Atos Cloud Foundry platform and its various components. UAA acts as an OAuth2 Authorization Server and issues access tokens for applications that request platform resources. The tokens are based on the JSON Web Token and are digitally signed by UAA. Applications that users deploy to Atos Cloud Foundry exist within a space. Spaces exist within orgs. To view and access an org or a space, a user must be a member of it. Cloud Foundry uses role-based access control (RBAC), where, each role is granted permissions to either an org or a specified space. The different access roles available in Atos Cloud Foundry are:<br /><strong>Org Manager</strong> Assign this role to managers or other users who need to administer the account. An Org Manager can do the following:<ul><li>Add and manage users</li><li>View users and edit org roles</li><li>View the org quota</li><li>Create, view, edit, and delete spaces</li><li>Invite and manage users in spaces</li><li>View the status, number of instances, service bindings, and resource use of each application in every space in the org</li><li>Add domains</li></ul><strong>Org Auditor</strong> Assign this role to people who need to view but not edit user information and org quota usage information. An Org Auditor can do the following:<ul><li>View users and org roles</li><li>View the org quota</li></ul><strong>Billing Manager</strong> Assign this role to people who need to create and manage billing account and payment information. A Billing Manager can do the following:<ul><li>Set the org spending limit</li><li>Create and set payment information</li><li>Read invoices and payment history</li><li>Create and edit the invoice notification email addresses</li></ul><strong>Space Manager</strong> Assign this role to managers or other users who need to administer a space. A Space Manager can do the following:<ul><li>Add and manage users in the space</li><li>View the status, number of instances, service bindings, and resource use of each application in the space</li></ul><strong>Space Developer</strong> Assign this role to application developers or other users who need to manage applications and services in a space. A Space Developer can do the following:<ul><li>Deploy an application</li><li>Start or stop an application</li><li>Rename an application</li><li>Delete an application</li><li>Create, view, edit, and delete services in a space</li><li>Bind or unbind a service to an application</li><li>Rename a space</li><li>View the status, number of instances, service bindings, and resource use of each application in the space</li><li>Change the number of instances, memory allocation, and disk limit of each application in the space</li><li>Associate an internal or external URL with an application</li></ul><strong>Space Auditor</strong> Assign this role to people who need to view but not edit the space . A Space Auditor can do the following:<ul><li>View the status, number of instances, service bindings, and resource use of each application in the space</li></ul>"
    },
    {
       "title": "How can I run non-web application in Atos Cloud Foundry?",
       "desc": "<blockquote>$ cf push &lt;app_name&gt; --no-route</blockquote>"
    },
    {
       "title": "What are the security measures available in Atos Cloud Foundry?",
       "desc": "Auditing, Firewall rules, OS Hardening, Vulnerability Scans, Patch Management, RBAC (Role Based Access Control), TLS/SSL Certificates are the security measures available in Atos Cloud Foundry."
    },
    {
       "title": "How can I connect to my own existing service and application running in Cloud Foundry?",
       "desc": "The CF CLI lets you securely log into remote host VMs running Cloud Foundry application instances. A cloud operator can deploy Cloud Foundry to either allow or prohibit Application SSH across the entire deployment. There are two ways of SSH to CF system:<ul><li>Configuring SSH Access at the Application Level - Enables SSH access to all instances of an app<img class='alignnone size-full wp-image-328' src='https://s3.amazonaws.com/acf-console/faq/sshAccessApp.png' alt='' width='343' height='43' /></li><li>Configuring SSH Access at the Space Level - Allows SSH access into all apps in a space<img class='alignnone size-full wp-image-331' src='https://s3.amazonaws.com/acf-console/faq/sshAccessSpace.png' alt='' width='309' height='39' /></li><li>Logging Into an Application Container with CF SSH</li></ul>If SSH access is allowed at the deployment, space, and application level, you can run “CF SSH APP-NAME” from the CF CLI to start an interactive SSH session with a VM hosting an application<ul><li><img class='alignnone size-full wp-image-334' src='https://s3.amazonaws.com/acf-console/faq/sshAccessDeploy.png' alt='' width='293' height='39' /></li></ul>"
    },
    {
       "title": "About LDAP: How can I integrate the CF to LDAP to my company’s LDAP?",
       "desc": "The Cloud Foundry UAA supports integration with an external LDAP server for authentication. If the credentials for this LDAP server are provided, we can deploy CF with this integration and your users can sign in with their existing credentials. Network domain: How to manage it consistently with my current domain names?"
    },
    {
       "title": "VPN / SSH: how to secure the connectivity to CF and CF-Apps?",
       "desc": "Use a BOSH release that enforces IPSEC communication between BOSH deployed systems. Deployed on VMs alongside CF components, it transparently encrypts all traffic in transit. No CF code changes are necessary, just a co-located IPSEC release alongside CF, and a customized deployment manifest. An IPSEC policy is added for each member that is participating in the IPSEC mesh. This makes it possible to be selective about what is protected, as well as keeping traffic to unrelated systems (DNS, log servers, etc.) unencrypted. An IKE daemon is used to rotate the encryption keys on a user defined schedule. The exact encryption policies are configurable through the BOSH manifest."
    },
    {
       "title": "How 2 different apps can communicate / cooperate with one another?",
       "desc": "One way to achieve such requirements in ACF is by using a messaging service (like RabbitMQ) to communicate between instances of applications. You can also store shared information in a database service or any remote location outside the file system."
    }
 ]